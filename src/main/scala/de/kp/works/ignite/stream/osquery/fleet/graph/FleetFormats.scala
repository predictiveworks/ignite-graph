package de.kp.works.ignite.stream.osquery.fleet.graph
/*
 * Copyright (c) 2019 - 2021 Dr. Krusche & Partner PartG. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *
 * @author Stefan Krusche, Dr. Krusche & Partner PartG
 *
 */

/**
 * The Osquery table names refer to v4.6.0
 */
object FleetFormats extends Enumeration {

  type FleetFormat = Value
  val ACCOUNT_POLICY_DATA: FleetFormats.Value = Value(1, "account_policy_data")
  val ACPI_TABLES: FleetFormats.Value = Value(2, "acpi_tables")
  val AD_CONFIG: FleetFormats.Value = Value(3, "ad_config")
  val ALF: FleetFormats.Value = Value(4, "alf")
  val ALF_EXCEPTIONS: FleetFormats.Value = Value(5, "alf_exceptions")
  val ALF_EXPLICIT_AUTHS: FleetFormats.Value = Value(6, "alf_explicit_auths")
  val APP_SCHEMES: FleetFormats.Value = Value(7, "app_schemes")
  val APPARMOR_EVENTS: FleetFormats.Value = Value(8, "apparmor_events")
  val APPARMOR_PROFILES: FleetFormats.Value = Value(9, "apparmor_profiles")
  val APPCOMPAT_SHIMS: FleetFormats.Value = Value(10, "appcompat_shims")
  val APPS: FleetFormats.Value = Value(11, "apps")
  val APT_SOURCES: FleetFormats.Value = Value(12, "apt_sources")
  val ARP_CACHE: FleetFormats.Value = Value(13, "arp_cache")
  val ASL: FleetFormats.Value = Value(14, "asl")
  val ATOM_PACKAGES: FleetFormats.Value = Value(15, "atom_packages")
  val AUGEAS: FleetFormats.Value = Value(16, "augeas")
  val AUTHENTICODE: FleetFormats.Value = Value(17, "authenticode")
  val AUTHORIZATION_MECHANISMS: FleetFormats.Value = Value(18, "authorization_mechanisms")
  val AUTHORIZATIONS: FleetFormats.Value = Value(19, "authorizations")
  val AUTHORIZED_KEYS: FleetFormats.Value = Value(20, "authorized_keys")
  val AUTOEXEC: FleetFormats.Value = Value(21, "autoexec")
  val AZURE_INSTANCE_METADATA: FleetFormats.Value = Value(22, "azure_instance_metadata")
  val AZURE_INSTANCE_TAGS: FleetFormats.Value = Value(23, "azure_instance_tags")
  val BACKGROUND_ACTIVITIES_MODERATOR: FleetFormats.Value = Value(24, "background_activities_moderator")
  val BATTERY: FleetFormats.Value = Value(25, "battery")
  val BITLOCKER_INFO: FleetFormats.Value = Value(26, "bitlocker_info")
  val BLOCK_DEVICES: FleetFormats.Value = Value(27, "block_devices")
  val BPF_PROCESS_EVENTS: FleetFormats.Value = Value(28, "bpf_process_events")
  val BPF_SOCKET_EVENTS: FleetFormats.Value = Value(29, "bpf_socket_events")
  val BROWSER_PLUGINS: FleetFormats.Value = Value(30, "browser_plugins")
  val CARBON_BLACK_INFO: FleetFormats.Value = Value(31, "carbon_black_info")
  val CARVES: FleetFormats.Value = Value(32, "carves")
  val CERTIFICATES: FleetFormats.Value = Value(33, "certificates")
  val CHASSIS_INFO: FleetFormats.Value = Value(34, "chassis_info")
  val CHOCOLATEY_PACKAGES: FleetFormats.Value = Value(35, "chocolatey_packages")
  val CHROME_EXTENSION_CONTENT_SCRIPTS: FleetFormats.Value = Value(36, "chrome_extension_content_scripts")
  val CHROME_EXTENSIONS: FleetFormats.Value = Value(37, "chrome_extensions")
  val CONNECTIVITY: FleetFormats.Value = Value(38, "connectivity")
  val CPU_INFO: FleetFormats.Value = Value(39, "cpu_info")
  val CPU_TIME: FleetFormats.Value = Value(40, "cpu_time")
  val CPUID: FleetFormats.Value = Value(41, "cpuid")
  val CRASHES: FleetFormats.Value = Value(42, "crashes")
  val CRONTAB: FleetFormats.Value = Value(43, "crontab")
  val CUPS_DESTINATIONS: FleetFormats.Value = Value(44, "cups_destinations")
  val CUPS_JOBS: FleetFormats.Value = Value(45, "cups_jobs")
  val CURL: FleetFormats.Value = Value(46, "curl")
  val CURL_CERTIFICATE: FleetFormats.Value = Value(47, "curl_certificate")
  val DEB_PACKAGES: FleetFormats.Value = Value(48, "deb_packages")
  val DEFAULT_ENVIRONMENT: FleetFormats.Value = Value(49, "default_environment")
  val DEVICE_FILE: FleetFormats.Value = Value(50, "device_file")
  val DEVICE_FIRMWARE: FleetFormats.Value = Value(51, "device_firmware")
  val DEVICE_HASH: FleetFormats.Value = Value(52, "device_hash")
  val DEVICE_PARTITIONS: FleetFormats.Value = Value(53, "device_partitions")
  val DISK_ENCRYPTION: FleetFormats.Value = Value(54, "disk_encryption")
  val DISK_EVENTS: FleetFormats.Value = Value(55, "disk_events")
  val DISK_INFO: FleetFormats.Value = Value(56, "disk_info")
  val DNS_CACHE: FleetFormats.Value = Value(57, "dns_cache")
  val DNS_RESOLVERS: FleetFormats.Value = Value(58, "dns_resolvers")
  val DOCKER_CONTAINER_FS_CHANGES: FleetFormats.Value = Value(59, "docker_container_fs_changes")
  val DOCKER_CONTAINER_LABELS: FleetFormats.Value = Value(60, "docker_container_labels")
  val DOCKER_CONTAINER_MOUNTS: FleetFormats.Value = Value(61, "docker_container_mounts")
  val DOCKER_CONTAINER_NETWORKS: FleetFormats.Value = Value(62, "docker_container_networks")
  val DOCKER_CONTAINER_PORTS: FleetFormats.Value = Value(63, "docker_container_ports")
  val DOCKER_CONTAINER_PROCESSES: FleetFormats.Value = Value(64, "docker_container_processes")
  val DOCKER_CONTAINER_STATS: FleetFormats.Value = Value(65, "docker_container_stats")
  val DOCKER_CONTAINERS: FleetFormats.Value = Value(66, "docker_containers")
  val DOCKER_IMAGE_HISTORY: FleetFormats.Value = Value(67, "docker_image_history")
  val DOCKER_IMAGE_LABELS: FleetFormats.Value = Value(68, "docker_image_labels")
  val DOCKER_IMAGE_LAYERS: FleetFormats.Value = Value(69, "docker_image_layers")
  val DOCKER_IMAGES: FleetFormats.Value = Value(70, "docker_images")
  val DOCKER_INFO: FleetFormats.Value = Value(71, "docker_info")
  val DOCKER_NETWORK_LABELS: FleetFormats.Value = Value(72, "docker_network_labels")
  val DOCKER_NETWORKS: FleetFormats.Value = Value(73, "docker_networks")
  val DOCKER_VERSION: FleetFormats.Value = Value(74, "docker_version")
  val DOCKER_VOLUME_LABELS: FleetFormats.Value = Value(75, "docker_volume_labels")
  val DOCKER_VOLUMES: FleetFormats.Value = Value(76, "docker_volumes")
  val DRIVERS: FleetFormats.Value = Value(77, "drivers")
  val EC2_INSTANCE_METADATA: FleetFormats.Value = Value(78, "ec2_instance_metadata")
  val EC2_INSTANCE_TAGS: FleetFormats.Value = Value(79, "ec2_instance_tags")
  val ELF_DYNAMIC: FleetFormats.Value = Value(80, "elf_dynamic")
  val ELF_INFO: FleetFormats.Value = Value(81, "elf_info")
  val ELF_SECTIONS: FleetFormats.Value = Value(82, "elf_sections")
  val ELF_SEGMENTS: FleetFormats.Value = Value(83, "elf_segments")
  val ELF_SYMBOLS: FleetFormats.Value = Value(84, "elf_symbols")
  val ETC_HOSTS: FleetFormats.Value = Value(85, "etc_hosts")
  val ETC_PROTOCOLS: FleetFormats.Value = Value(86, "etc_protocols")
  val ETC_SERVICES: FleetFormats.Value = Value(87, "etc_services")
  val EVENT_TAPS: FleetFormats.Value = Value(88, "event_taps")
  val EXAMPLE: FleetFormats.Value = Value(89, "example")
  val EXTENDED_ATTRIBUTES: FleetFormats.Value = Value(90, "extended_attributes")
  val FAN_SPEED_SENSORS: FleetFormats.Value = Value(91, "fan_speed_sensors")
  val FBSD_KMODS: FleetFormats.Value = Value(92, "fbsd_kmods")
  val FILE: FleetFormats.Value = Value(93, "file")
  val FILE_EVENTS: FleetFormats.Value = Value(94, "file_events")
  val FIREFOX_ADDONS: FleetFormats.Value = Value(95, "firefox_addons")
  val GATEKEEPER: FleetFormats.Value = Value(96, "gatekeeper")
  val GATEKEEPER_APPROVED_APPS: FleetFormats.Value = Value(97, "gatekeeper_approved_apps")
  val GROUPS: FleetFormats.Value = Value(98, "groups")
  val HARDWARE_EVENTS: FleetFormats.Value = Value(99, "hardware_events")
  val HASH: FleetFormats.Value = Value(100, "hash")
  val HOMEBREW_PACKAGES: FleetFormats.Value = Value(101, "homebrew_packages")
  val HVCI_STATUS: FleetFormats.Value = Value(102, "hvci_status")
  val IBRIDGE_INFO: FleetFormats.Value = Value(103, "ibridge_info")
  val IE_EXTENSIONS: FleetFormats.Value = Value(104, "ie_extensions")
  val INTEL_ME_INFO: FleetFormats.Value = Value(105, "intel_me_info")
  val INTERFACE_ADDRESSES: FleetFormats.Value = Value(106, "interface_addresses")
  val INTERFACE_DETAILS: FleetFormats.Value = Value(107, "interface_details")
  val INTERFACE_IPV6: FleetFormats.Value = Value(108, "interface_ipv6")
  val IOKIT_DEVICETREE: FleetFormats.Value = Value(109, "iokit_devicetree")
  val IOKIT_REGISTRY: FleetFormats.Value = Value(110, "iokit_registry")
  val IPTABLES: FleetFormats.Value = Value(111, "iptables")
  val KERNEL_EXTENSIONS: FleetFormats.Value = Value(112, "kernel_extensions")
  val KERNEL_INFO: FleetFormats.Value = Value(113, "kernel_info")
  val KERNEL_MODULES: FleetFormats.Value = Value(114, "kernel_modules")
  val KERNEL_PANICS: FleetFormats.Value = Value(115, "kernel_panics")
  val KEYCHAIN_ACLS: FleetFormats.Value = Value(116, "keychain_acls")
  val KEYCHAIN_ITEMS: FleetFormats.Value = Value(117, "keychain_items")
  val KNOWN_HOSTS: FleetFormats.Value = Value(118, "known_hosts")
  val KVA_SPECULATIVE_INFO: FleetFormats.Value = Value(119, "kva_speculative_info")
  val LAST: FleetFormats.Value = Value(120, "last")
  val LAUNCHD: FleetFormats.Value = Value(121, "launchd")
  val LAUNCHD_OVERRIDES: FleetFormats.Value = Value(122, "launchd_overrides")
  val LISTENING_PORTS: FleetFormats.Value = Value(123, "listening_ports")
  val LLDP_NEIGHBORS: FleetFormats.Value = Value(124, "lldp_neighbors")
  val LOAD_AVERAGE: FleetFormats.Value = Value(125, "load_average")
  val LOCATION_SERVICES: FleetFormats.Value = Value(126, "location_services")
  val LOGGED_IN_USERS: FleetFormats.Value = Value(127, "logged_in_users")
  val LOGICAL_DRIVES: FleetFormats.Value = Value(128, "logical_drives")
  val LOGON_SESSIONS: FleetFormats.Value = Value(129, "logon_sessions")
  val LXD_CERTIFICATES: FleetFormats.Value = Value(130, "lxd_certificates")
  val LXD_CLUSTER: FleetFormats.Value = Value(131, "lxd_cluster")
  val LXD_CLUSTER_MEMBERS: FleetFormats.Value = Value(132, "lxd_cluster_members")
  val LXD_IMAGES: FleetFormats.Value = Value(133, "lxd_images")
  val LXD_INSTANCE_CONFIG: FleetFormats.Value = Value(134, "lxd_instance_config")
  val LXD_INSTANCE_DEVICES: FleetFormats.Value = Value(135, "lxd_instance_devices")
  val LXD_INSTANCES: FleetFormats.Value = Value(136, "lxd_instances")
  val LXD_NETWORKS: FleetFormats.Value = Value(137, "lxd_networks")
  val LXD_STORAGE_POOLS: FleetFormats.Value = Value(138, "lxd_storage_pools")
  val MAGIC: FleetFormats.Value = Value(139, "magic")
  val MANAGED_POLICIES: FleetFormats.Value = Value(140, "managed_policies")
  val MD_DEVICES: FleetFormats.Value = Value(141, "md_devices")
  val MD_DRIVES: FleetFormats.Value = Value(142, "md_drives")
  val MD_PERSONALITIES: FleetFormats.Value = Value(143, "md_personalities")
  val MDFIND: FleetFormats.Value = Value(144, "mdfind")
  val MDLS: FleetFormats.Value = Value(145, "mdls")
  val MEMORY_ARRAY_MAPPED_ADDRESSES: FleetFormats.Value = Value(146, "memory_array_mapped_addresses")
  val MEMORY_ARRAYS: FleetFormats.Value = Value(147, "memory_arrays")
  val MEMORY_DEVICE_MAPPED_ADDRESSES: FleetFormats.Value = Value(148, "memory_device_mapped_addresses")
  val MEMORY_DEVICES: FleetFormats.Value = Value(149, "memory_devices")
  val MEMORY_ERROR_INFO: FleetFormats.Value = Value(150, "memory_error_info")
  val MEMORY_INFO: FleetFormats.Value = Value(151, "memory_info")
  val MEMORY_MAP: FleetFormats.Value = Value(152, "memory_map")
  val MOUNTS: FleetFormats.Value = Value(153, "mounts")
  val MSR: FleetFormats.Value = Value(154, "msr")
  val NFS_SHARES: FleetFormats.Value = Value(155, "nfs_shares")
  val NPM_PACKAGES: FleetFormats.Value = Value(156, "npm_packages")
  val NTDOMAINS: FleetFormats.Value = Value(157, "ntdomains")
  val NTFS_ACL_PERMISSIONS: FleetFormats.Value = Value(158, "ntfs_acl_permissions")
  val NTFS_JOURNAL_EVENTS: FleetFormats.Value = Value(159, "ntfs_journal_events")
  val NVRAM: FleetFormats.Value = Value(160, "nvram")
  val OEM_STRINGS: FleetFormats.Value = Value(161, "oem_strings")
  val OFFICE_MRU: FleetFormats.Value = Value(162, "office_mru")
  val OPERA_EXTENSIONS: FleetFormats.Value = Value(163, "opera_extensions")
  val OS_VERSION: FleetFormats.Value = Value(164, "os_version")
  val OSQUERY_EVENTS: FleetFormats.Value = Value(165, "osquery_events")
  val OSQUERY_EXTENSIONS: FleetFormats.Value = Value(166, "osquery_extensions")
  val OSQUERY_FLAGS: FleetFormats.Value = Value(167, "osquery_flags")
  val OSQUERY_INFO: FleetFormats.Value = Value(168, "osquery_info")
  val OSQUERY_PACKS: FleetFormats.Value = Value(169, "osquery_packs")
  val OSQUERY_REGISTRY: FleetFormats.Value = Value(170, "osquery_registry")
  val OSQUERY_SCHEDULE: FleetFormats.Value = Value(171, "osquery_schedule")
  val PACKAGE_BOM: FleetFormats.Value = Value(172, "package_bom")
  val PACKAGE_INSTALL_HISTORY: FleetFormats.Value = Value(173, "package_install_history")
  val PACKAGE_RECEIPTS: FleetFormats.Value = Value(174, "package_receipts")
  val PATCHES: FleetFormats.Value = Value(175, "patches")
  val PCI_DEVICES: FleetFormats.Value = Value(176, "pci_devices")
  val PHYSICAL_DISK_PERFORMANCE: FleetFormats.Value = Value(177, "physical_disk_performance")
  val PIPES: FleetFormats.Value = Value(178, "pipes")
  val PKG_PACKAGES: FleetFormats.Value = Value(179, "pkg_packages")
  val PLATFORM_INFO: FleetFormats.Value = Value(180, "platform_info")
  val PLIST: FleetFormats.Value = Value(181, "plist")
  val PORTAGE_KEYWORDS: FleetFormats.Value = Value(182, "portage_keywords")
  val PORTAGE_PACKAGES: FleetFormats.Value = Value(183, "portage_packages")
  val PORTAGE_USE: FleetFormats.Value = Value(184, "portage_use")
  val POWER_SENSORS: FleetFormats.Value = Value(185, "power_sensors")
  val POWERSHELL_EVENTS: FleetFormats.Value = Value(186, "powershell_events")
  val PREFERENCES: FleetFormats.Value = Value(187, "preferences")
  val PROCESS_ENVS: FleetFormats.Value = Value(188, "process_envs")
  val PROCESS_EVENTS: FleetFormats.Value = Value(189, "process_events")
  val PROCESS_FILE_EVENTS: FleetFormats.Value = Value(190, "process_file_events")
  val PROCESS_MEMORY_MAP: FleetFormats.Value = Value(191, "process_memory_map")
  val PROCESS_NAMESPACES: FleetFormats.Value = Value(192, "process_namespaces")
  val PROCESS_OPEN_FILES: FleetFormats.Value = Value(193, "process_open_files")
  val PROCESS_OPEN_PIPES: FleetFormats.Value = Value(194, "process_open_pipes")
  val PROCESS_OPEN_SOCKETS: FleetFormats.Value = Value(195, "process_open_sockets")
  val PROCESSES: FleetFormats.Value = Value(196, "processes")
  val PROGRAMS: FleetFormats.Value = Value(197, "programs")
  val PROMETHEUS_METRICS: FleetFormats.Value = Value(198, "prometheus_metrics")
  val PYTHON_PACKAGES: FleetFormats.Value = Value(199, "python_packages")
  val QUICKLOOK_CACHE: FleetFormats.Value = Value(200, "quicklook_cache")
  val REGISTRY: FleetFormats.Value = Value(201, "registry")
  val ROUTES: FleetFormats.Value = Value(202, "routes")
  val RPM_PACKAGE_FILES: FleetFormats.Value = Value(203, "rpm_package_files")
  val RPM_PACKAGES: FleetFormats.Value = Value(204, "rpm_packages")
  val RUNNING_APPS: FleetFormats.Value = Value(205, "running_apps")
  val SAFARI_EXTENSIONS: FleetFormats.Value = Value(206, "safari_extensions")
  val SANDBOXES: FleetFormats.Value = Value(207, "sandboxes")
  val SCHEDULED_TASKS: FleetFormats.Value = Value(208, "scheduled_tasks")
  val SCREENLOCK: FleetFormats.Value = Value(209, "screenlock")
  val SELINUX_EVENTS: FleetFormats.Value = Value(210, "selinux_events")
  val SELINUX_SETTINGS: FleetFormats.Value = Value(211, "selinux_settings")
  val SERVICES: FleetFormats.Value = Value(212, "services")
  val SHADOW: FleetFormats.Value = Value(213, "shadow")
  val SHARED_FOLDERS: FleetFormats.Value = Value(214, "shared_folders")
  val SHARED_MEMORY: FleetFormats.Value = Value(215, "shared_memory")
  val SHARED_RESOURCES: FleetFormats.Value = Value(216, "shared_resources")
  val SHARING_PREFERENCES: FleetFormats.Value = Value(217, "sharing_preferences")
  val SHELL_HISTORY: FleetFormats.Value = Value(218, "shell_history")
  val SHELLBAGS: FleetFormats.Value = Value(219, "shellbags")
  val SHIMCACHE: FleetFormats.Value = Value(220, "shimcache")
  val SIGNATURE: FleetFormats.Value = Value(221, "signature")
  val SIP_CONFIG: FleetFormats.Value = Value(222, "sip_config")
  val SMART_DRIVE_INFO: FleetFormats.Value = Value(223, "smart_drive_info")
  val SMBIOS_TABLES: FleetFormats.Value = Value(224, "smbios_tables")
  val SMC_KEYS: FleetFormats.Value = Value(225, "smc_keys")
  val SOCKET_EVENTS: FleetFormats.Value = Value(226, "socket_events")
  val SSH_CONFIGS: FleetFormats.Value = Value(227, "ssh_configs")
  val STARTUP_ITEMS: FleetFormats.Value = Value(228, "startup_items")
  val SUDOERS: FleetFormats.Value = Value(229, "sudoers")
  val SUID_BIN: FleetFormats.Value = Value(230, "suid_bin")
  val SYSLOG_EVENTS: FleetFormats.Value = Value(231, "syslog_events")
  val SYSTEM_CONTROLS: FleetFormats.Value = Value(232, "system_controls")
  val SYSTEM_EXTENSIONS: FleetFormats.Value = Value(233, "system_extensions")
  val SYSTEM_INFO: FleetFormats.Value = Value(234, "system_info")
  val SYSTEMD_UNITS: FleetFormats.Value = Value(235, "systemd_units")
  val TEMPERATURE_SENSORS: FleetFormats.Value = Value(236, "temperature_sensors")
  val TIME: FleetFormats.Value = Value(237, "time")
  val TIME_MACHINE_BACKUPS: FleetFormats.Value = Value(238, "time_machine_backups")
  val TIME_MACHINE_DESTINATIONS: FleetFormats.Value = Value(239, "time_machine_destinations")
  val ULIMIT_INFO: FleetFormats.Value = Value(240, "ulimit_info")
  val UPTIME: FleetFormats.Value = Value(241, "uptime")
  val USB_DEVICES: FleetFormats.Value = Value(242, "usb_devices")
  val USER_EVENTS: FleetFormats.Value = Value(243, "user_events")
  val USER_GROUPS: FleetFormats.Value = Value(244, "user_groups")
  val USER_INTERACTION_EVENTS: FleetFormats.Value = Value(245, "user_interaction_events")
  val USER_SSH_KEYS: FleetFormats.Value = Value(246, "user_ssh_keys")
  val USERASSIST: FleetFormats.Value = Value(247, "userassist")
  val USERS: FleetFormats.Value = Value(248, "users")
  val VIDEO_INFO: FleetFormats.Value = Value(249, "video_info")
  val VIRTUAL_MEMORY_INFO: FleetFormats.Value = Value(250, "virtual_memory_info")
  val WIFI_NETWORKS: FleetFormats.Value = Value(251, "wifi_networks")
  val WIFI_STATUS: FleetFormats.Value = Value(252, "wifi_status")
  val WIFI_SURVEY: FleetFormats.Value = Value(253, "wifi_survey")
  val WINBASEOBJ: FleetFormats.Value = Value(254, "winbaseobj")
  val WINDOWS_CRASHES: FleetFormats.Value = Value(255, "windows_crashes")
  val WINDOWS_EVENTLOG: FleetFormats.Value = Value(256, "windows_eventlog")
  val WINDOWS_EVENTS: FleetFormats.Value = Value(257, "windows_events")
  val WINDOWS_OPTIONAL_FEATURES: FleetFormats.Value = Value(258, "windows_optional_features")
  val WINDOWS_SECURITY_CENTER: FleetFormats.Value = Value(259, "windows_security_center")
  val WINDOWS_SECURITY_PRODUCTS: FleetFormats.Value = Value(260, "windows_security_products")
  val WMI_BIOS_INFO: FleetFormats.Value = Value(261, "wmi_bios_info")
  val WMI_CLI_EVENT_CONSUMERS: FleetFormats.Value = Value(262, "wmi_cli_event_consumers")
  val WMI_EVENT_FILTERS: FleetFormats.Value = Value(263, "wmi_event_filters")
  val WMI_FILTER_CONSUMER_BINDING: FleetFormats.Value = Value(264, "wmi_filter_consumer_binding")
  val WMI_SCRIPT_EVENT_CONSUMERS: FleetFormats.Value = Value(265, "wmi_script_event_consumers")
  val XPROTECT_ENTRIES: FleetFormats.Value = Value(266, "xprotect_entries")
  val XPROTECT_META: FleetFormats.Value = Value(267, "xprotect_meta")
  val XPROTECT_REPORTS: FleetFormats.Value = Value(268, "xprotect_reports")
  val YARA: FleetFormats.Value = Value(269, "yara")
  val YARA_EVENTS: FleetFormats.Value = Value(270, "yara_events")
  val YCLOUD_INSTANCE_METADATA: FleetFormats.Value = Value(271, "ycloud_instance_metadata")
  val YUM_SOURCES: FleetFormats.Value = Value(272, "yum_sources")
}
